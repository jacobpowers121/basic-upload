{"ast":null,"code":"var _jsxFileName = \"/home/jacob/dev/basic-upload/basic-upload-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [dbContents, setDbContents] = useState([]);\n\n  // Handles file input change\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n\n  // Handles file upload submission\n  const handleFileUpload = () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    axios.post('http://localhost:8080/api/file', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      alert('File uploaded successfully');\n      fetchDbContents(); // Refresh database contents after upload\n    }).catch(error => {\n      alert('Error uploading file');\n    });\n  };\n\n  // Fetches the list of contents from the database\n  const fetchDbContents = () => {\n    axios.get('http://localhost:8080/api/files').then(response => {\n      setDbContents(response.data); // response.data is an array of file paths\n    }).catch(error => {\n      console.log('Error fetching database contents');\n    });\n  };\n\n  // Fetch database contents when the component mounts\n  useEffect(() => {\n    fetchDbContents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"File Upload App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      children: \"Submit File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Database Contents:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dbContents.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No files found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this) : dbContents.map((filePath, index) => {\n        const fileName = filePath.split('/').pop(); // Extract the filename\n        const fileUrl = `http://localhost:8080/files/${fileName}`; // Construct URL to file served by backend\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: fileUrl,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"VhYwSTKR05hkzPSxaS5lsjw8WDM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","dbContents","setDbContents","handleFileChange","event","target","files","handleFileUpload","formData","FormData","append","post","headers","then","response","alert","fetchDbContents","catch","error","get","data","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","length","map","filePath","index","split","pop","fileUrl","href","rel","_c","$RefreshReg$"],"sources":["/home/jacob/dev/basic-upload/basic-upload-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n    const [file, setFile] = useState(null);\n    const [dbContents, setDbContents] = useState([]);\n\n    // Handles file input change\n    const handleFileChange = (event) => {\n        setFile(event.target.files[0]);\n    };\n\n    // Handles file upload submission\n    const handleFileUpload = () => {\n        if (!file) return;\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        axios.post('http://localhost:8080/api/file', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n            .then(response => {\n                alert('File uploaded successfully');\n                fetchDbContents(); // Refresh database contents after upload\n            })\n            .catch(error => {\n                alert('Error uploading file');\n            });\n    };\n\n    // Fetches the list of contents from the database\n    const fetchDbContents = () => {\n        axios.get('http://localhost:8080/api/files')\n            .then(response => {\n                setDbContents(response.data); // response.data is an array of file paths\n            })\n            .catch(error => {\n                console.log('Error fetching database contents');\n            });\n    };\n\n    // Fetch database contents when the component mounts\n    useEffect(() => {\n        fetchDbContents();\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <h1>File Upload App</h1>\n\n            {/* File Upload Input */}\n            <input type=\"file\" onChange={handleFileChange} />\n\n            {/* Submit Button */}\n            <button onClick={handleFileUpload}>Submit File</button>\n\n            {/* Display DB Contents */}\n            <h2>Database Contents:</h2>\n            <ul>\n                {dbContents.length === 0 ? (\n                    <li>No files found</li>\n                ) : (\n                    dbContents.map((filePath, index) => {\n                        const fileName = filePath.split('/').pop(); // Extract the filename\n                        const fileUrl = `http://localhost:8080/files/${fileName}`; // Construct URL to file served by backend\n\n                        return (\n                            <li key={index}>\n                                <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {fileName}\n                                </a>\n                            </li>\n                        );\n                    })\n                )}\n            </ul>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}